<?php

/**
 * @file
 * noty Messages
 * A noty based override of Drupal's core message system
 */

/**
 * Define Default Values
 */
define('NOTY_POSITION', 'pos_top_center');
define('NOTY_TEXT', 'text_center');
define('NOTY_SPEED', 500);
define('NOTY_TIMEOUT', 5000);
define('NOTY_THEME', 'default');
define('NOTY_CLOSABLE', TRUE);
define('NOTY_CLICK_TO_CLOSE', TRUE);
define('NOTY_MODAL', FALSE);
define('NOTY_MODAL_CSS', '');
define('NOTY_ON_ADMIN', FALSE);
/**
 * Implements hook_permission().
 */
function noty_messages_permission() {
  return array(
    'view noty messages' => array(
      'title' => 'View noty messages',
    ),
    'administer noty messages' => array(
      'title' => 'Administer noty messages',
    ),
  );
}

/**
 * Implements hook_help().
 */
function noty_messages_help($path, $arg) {
  if ($path == 'admin/settings/noty') {
    return t('Set your options and decide whether you want the noty styled messages
      to appear on admin pages or not.');
  }
}

/**
 * Implements hook_menu().
 */
function noty_messages_menu() {
  $items = array();
  $items['notytesting'] = array(
    'title' => 'Configure noty Messages',
    'description' => 'Settings to control the noty messages output.',
    'page callback' => 'notytesting',
    'page arguments' => array(TRUE),
    'access callback' => 'user_access',
    'access arguments' => array('administer noty messages'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/user-interface/noty-messages'] = array(
    'title' => 'Configure noty Messages',
    'description' => 'Settings to control noty messages',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('noty_messages_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer noty messages'),
    'file' => 'noty_messages.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function notytesting($something){
  drupal_set_message('poop');
  return 'testing messages';
}
/**
 * Implements hook_theme().
 */
function noty_messages_theme($existing, $type, $theme, $path) {
  return array(
    'original_status_messages' => array(
      'variables' => array('type' => NULL, 'messages' => NULL),
    )
  );
}

/**
 * Implements hook_theme_registry_alter().
 *
 */
function noty_messages_theme_registry_alter(&$theme_registry) {
  if (substr(current_path(), 0, 5) != 'admin'){
    $theme_registry['status_messages']['function'] = 'noty_messages_status_messages';
  }
}


function noty_messages_status_messages($variables) {
  $display = $variables['display'];
  $output = '';
  $noty = NULL;
}
